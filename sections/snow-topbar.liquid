<style>
  @import url('https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&display=swap');

  .snow-topbar {
    background-color: #074a97;
    overflow: hidden;
  }
  .snow-topbar-container {
    max-width: 1320px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .snow-topbar-content {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 300px;
    padding: 10px 0;
  }

  .snow-topbar-title {
    color: #ffffff;
    font-family: 'DM Sans';
    font-weight: 700;
    font-size: 24px;
    text-align: center;
    padding: 10px 0;
  }

  .countdown-container {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 12px;
  }

  .timer-item {
    text-align: center;
    position: relative;
  }

  .timer-item span {
    font-family: 'DM Sans';
    font-size: 24px;
    line-height: 24px;
    color: #ffffff;
    display: block;
  }

  .timer-item .timer-text {
    font-size: 14px;
    line-height: 14px;
  }
  .timer-item .divider {
    font-size: 34px;
    line-height: 1;
    margin-top: -6px;
  }

  @media (max-width: 767px) {
    .snow-topbar-content {
      gap: 20px;
    }

    .snow-topbar-title {
      font-size: 18px;
    }
    .timer-item span {
      font-size: 18px;
    }
    .timer-item .divider {
      font-size: 24px;
    }
  }
  @media (max-width: 575px) {
    .countdown-container {
      gap: 5px;
    }

    .snow-topbar-title {
      font-size: 14px;
    }
    .timer-item span {
      font-size: 14px;
    }
    .timer-item .divider {
      font-size: 16px;
    }
    .snow-topbar-content {
      gap: 8px;
    }
    .snow-topbar-container {
      padding: 0 10px;
    }

    .timer-item .timer-text {
      font-size: 10px;
      line-height: 10px;
    }
  }
</style>

{% assign show_countdown = false %}

{% for coll in section.settings.target_collections %}
  {% if collection.handle == coll.handle %}
    {% assign show_countdown = true %}
  {% endif %}
{% endfor %}



{% if show_countdown %}
  <div class="snow-topbar">
    <div class="snow-topbar-container">
      <div class="snow-topbar-content">
        <div class="snow-topbar-title">{{ section.settings.top_title }}</div>
        <div class="snow-topbar-timer">
          <div id="countdown-{{ section.id }}" class="countdown-container">
            <div class="timer-item">
              <span id="day-{{ section.id }}">00</span>
              <span class="timer-text">Days</span>
            </div>
            <div class="timer-item">
              <span class="divider">:</span>
            </div>
            <div class="timer-item">
              <span id="hrs-{{ section.id }}">00</span>
              <span class="timer-text">Hrs</span>
            </div>
            <div class="timer-item">
              <span class="divider">:</span>
            </div>
            <div class="timer-item">
              <span id="min-{{ section.id }}">00</span>
              <span class="timer-text">Mins</span>
            </div>
            <div class="timer-item">
              <span class="divider">:</span>
            </div>
            <div class="timer-item">
              <span id="sec-{{ section.id }}">00</span>
              <span class="timer-text">Secs</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
{% endif %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    var countDownDate = new Date('{{ section.settings.countdown_time }}').getTime();
    var containerId = '{{ section.id }}';

    var dayEl = document.getElementById('day-' + containerId);
    var hrsEl = document.getElementById('hrs-' + containerId);
    var minEl = document.getElementById('min-' + containerId);
    var secEl = document.getElementById('sec-' + containerId);

    var x = setInterval(function () {
      var now = new Date().getTime();
      var distance = countDownDate - now;

      if (distance < 0) {
        clearInterval(x);
        if (dayEl) dayEl.innerHTML = '00';
        if (hrsEl) hrsEl.innerHTML = '00';
        if (minEl) minEl.innerHTML = '00';
        if (secEl) secEl.innerHTML = '00';
        return;
      }

      var days = Math.floor(distance / (1000 * 60 * 60 * 24));
      var hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
      var minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
      var seconds = Math.floor((distance % (1000 * 60)) / 1000);

      if (dayEl) dayEl.innerHTML = days < 10 ? '0' + days : days;
      if (hrsEl) hrsEl.innerHTML = hours < 10 ? '0' + hours : hours;
      if (minEl) minEl.innerHTML = minutes < 10 ? '0' + minutes : minutes;
      if (secEl) secEl.innerHTML = seconds < 10 ? '0' + seconds : seconds;
    }, 1000);
  });
</script>

{% schema %}
{
  "name": "Countdown Timer",
  "tag": "section",
  "class": "countdown-timer-section",
  "settings": [
    {
      "type": "collection_list",
      "id": "target_collections",
      "label": "Show on these collections"
    },
    {
        "type": "text",
        "id": "top_title",
        "label": "Title Here",
        "default": "Black Friday in July Ends:"
    },
    {
      "type": "text",
      "id": "countdown_time",
      "label": "Countdown Target (e.g. Jun 5, 2026 15:37:25)",
      "default": "Jun 5, 2026 15:37:25"
    }
  ],

  "presets": [
    {
      "name": "Countdown Timer"
    }
  ]
}
{% endschema %}
